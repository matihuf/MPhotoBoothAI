<UserControl
    x:Class="MPhotoBoothAI.Avalonia.Controls.DesignLayoutControl"
    xmlns="https://github.com/avaloniaui"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:assets="using:MPhotoBoothAI.Application.Assets"
    xmlns:controls="using:MPhotoBoothAI.Avalonia.Controls"
    xmlns:converters="using:MPhotoBoothAI.Avalonia.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    Name="root"
    x:DataType="controls:DesignLayoutControl"
    KeyDown="ModifierPressed"
    KeyUp="ModifierReleased"
    Loaded="LoadedControl">

    <UserControl.Styles>
        <Style Selector="Button">
            <Setter Property="Width" Value="{Binding ButtonWidth}" />
            <Setter Property="Height" Value="{Binding ButtonHeight}" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="Margin" Value="0 0 10 10" />
            <Setter Property="CommandParameter" Value="{Binding CommandParameter, ElementName=root}" />
        </Style>
        <Style Selector="Border.LayerButton">
            <Setter Property="Background" Value="{StaticResource ActiveColor}" />
            <Setter Property="Width" Value="15" />
            <Setter Property="Height" Value="15" />
            <Setter Property="CornerRadius" Value="8" />
            <Setter Property="Margin" Value="10 0 0 0" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="BorderBrush" Value="{StaticResource ActiveColor}" />
        </Style>
        <Style Selector="Canvas">
            <Setter Property="HorizontalAlignment" Value="Stretch" />
            <Setter Property="ClipToBounds" Value="True" />
        </Style>
        <Style Selector="ContextMenu">
            <Setter Property="FontSize" Value="{DynamicResource FontSizeSmall}" />
            <Setter Property="Padding" Value="0" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="Height" Value="90" />
            <Setter Property="Width" Value="150" />
            <Setter Property="Background" Value="DarkGray" />
            <Setter Property="CornerRadius" Value="10" />
        </Style>
        <Style Selector="MenuItem">
            <Setter Property="Width" Value="150" />
            <Setter Property="Height" Value="{StaticResource TouchItemHeight}" />
            <Setter Property="Foreground" Value="White" />
            <Setter Property="FontSize" Value="14" />
            <Setter Property="Margin" Value="0" />
            <Setter Property="CornerRadius" Value="0" />
            <Setter Property="Padding" Value="20 0 0 0" />
            <Setter Property="HorizontalAlignment" Value="Center" />
        </Style>
        <Style Selector="MenuItem:pointerover">
            <Setter Property="Background" Value="#333333" />
        </Style>
        <Style Selector="MenuItem:pressed">
            <Setter Property="Background" Value="#555555" />
        </Style>
    </UserControl.Styles>
    <UserControl.Resources>
        <converters:BoolToOpacityLevelConverter x:Key="boolToOpacity" />
        <x:Double x:Key="OpacityValue">0.8</x:Double>
    </UserControl.Resources>
    <StackPanel>
        <Grid Name="canvasRoot" MinWidth="400">
            <Border
                Margin="0"
                Background="#20202020"
                BorderThickness="0"
                CornerRadius="0">
                <TextBlock
                    VerticalAlignment="Center"
                    FontSize="{StaticResource CanvasFontSize}"
					TextAlignment="Center"
                    Text="{x:Static assets:UI.designCanvasText}"
                    TextWrapping="Wrap" />
            </Border>
            <Image
                Name="canvasBackground"
                Stretch="Fill"
                StretchDirection="Both" />
            <Canvas Name="photoCanvas" IsHitTestVisible="{Binding ActiveLayerSwitch, ElementName=root}" />
            <Canvas
                Name="frameCanvas"
                Background="Transparent"
                DragDrop.AllowDrop="True"
                DragDrop.Drop="Drop"
                IsHitTestVisible="{Binding !ActiveLayerSwitch, ElementName=root}"
                Opacity="{Binding ActiveLayerSwitch, ElementName=root, Converter={StaticResource boolToOpacity}, ConverterParameter={StaticResource OpacityValue}}" />
        </Grid>
        <WrapPanel
            Margin="0,10,0,10"
            VerticalAlignment="Bottom"
            Orientation="Horizontal">
            <Button Command="{Binding NextBackground, ElementName=root}" Content="{x:Static assets:UI.nextBackground}" />
            <Button Command="{Binding SwitchLayerCommand, ElementName=root}" CommandParameter="{StaticResource True}">
                <Button.Content>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock VerticalAlignment="Bottom" Text="{x:Static assets:UI.photoLayer}" />
                        <Border Background="Transparent" Classes="LayerButton">
                            <Border
                                Margin="0"
                                Classes="LayerButton"
                                IsVisible="{Binding ActiveLayerSwitch, ElementName=root}" />
                        </Border>
                    </StackPanel>
                </Button.Content>
            </Button>
            <Button Command="{Binding SwitchLayerCommand, ElementName=root}" CommandParameter="{StaticResource False}">
                <Button.Content>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock VerticalAlignment="Center" Text="{x:Static assets:UI.frameLayer}" />
                        <Border Background="Transparent" Classes="LayerButton">
                            <Border
                                Margin="0"
                                Classes="LayerButton"
                                IsVisible="{Binding !ActiveLayerSwitch, ElementName=root}" />
                        </Border>
                    </StackPanel>
                </Button.Content>
            </Button>
            <Button
                Command="{Binding AddPhotoCommand, ElementName=root}"
                Content="{x:Static assets:UI.addPhoto}"
                IsEnabled="{Binding ActiveLayerSwitch, ElementName=root}" />
            <Button
                Command="{Binding RemovePhotoCommand, ElementName=root}"
                Content="{x:Static assets:UI.removePhoto}"
                IsEnabled="{Binding ActiveLayerSwitch, ElementName=root}" />
            <Button
                Command="{Binding AddFrameCommand, ElementName=root}"
                Content="{x:Static assets:UI.addFrame}"
                IsEnabled="{Binding !ActiveLayerSwitch, ElementName=root}" />
            <Button Content="{x:Static assets:UI.saveLayout}" />
            <Button Content="{x:Static assets:UI.clearLayout}" />
        </WrapPanel>
    </StackPanel>
</UserControl>